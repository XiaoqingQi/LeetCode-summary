============================================================================================================
Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai).
n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). 
Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container and n is at least 2. 
-------------------------------------------------------------------------------------------------------------
Firstly, draw a x,y-axis picture to convert text information.
Then, generalize ideas from the picture.
The container is rectangle, the amont of water it can contain is determined by width and heigth. 
The width is right - left.
The height is the minimum value of the left line height and the right lien heigth.
We use two pointers tech to solve the problem.

class Solution {
    public int maxArea(int[] height) {
        if (height == null){
            return 0;
        }
        int maxArea = 0;
        int left = 0;
        int right = height.length - 1;
        while (left < right){
            int area = (right - left) * Math.min(height[left], height[right]);
            maxArea = Math.max(maxArea, area);
            if (height[left] < height[right]){
                left++;
            } else {
                right--;
            }
        }
        return maxArea;
    }
}
============================================================================================================
